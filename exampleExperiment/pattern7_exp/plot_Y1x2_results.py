import matplotlib.pyplot as plt

plt.figure(1)
plt.ylabel(r'$\mathrm{KLD \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
NLIMIT_values = [1, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000]
rv_values = [0.31546680485996181, 0.10371719464542195, 0.046907205022106907, 0.030820846193848495, 0.028458554131843294, 0.017968363932807881, 0.0081144066089851238, 0.0054830972438483739, 0.0046211308460555557]
rv_CI_points = [0.0, 0.014740135489781116, 0.0072006569435874553, 0.002388276210520103, 0.013331940353785994, 0.013181391321033924, 0.0036528897185217884, 0.004810733223883275, 0.0024109583340224923]
plt.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
plt.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.31546680485996181, 0.13354164933916007, 0.066613951956671691, 0.063836438397860934, 0.028588376517838208, 0.021187373077161113, 0.013721865239716117, 0.013030196470483486, 0.010710946786977467]
fu_CI_points = [0.0, 0.090676046091328455, 0.01634150603936832, 0.088460367624821651, 0.039644840268613361, 0.027321697899480638, 0.015533538632383638, 0.0094838256313584408, 0.0065321445456135805]
plt.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
plt.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
plt.yscale('log')
plt.legend()
plt.savefig('KLDofY1x2'+'.pdf', format='pdf')
plt.savefig('KLDofY1x2'+'.eps', format='eps')


falsefu_values = [0.31546680485996181, 0.194740925157775, 0.048231404828969093, 0.032345878588444552, 0.017638798111958037, 0.0082046296267670512, 0.028435191826047167, 0.032517979010593279, 0.024882864936355033]
falsefu_CI_points = [0.0, 0.28183069446164755, 0.0005718643799125457, 0.015119186360904792, 0.018869655385717478, 0.0020843928377536434, 0.043096693743915976, 0.048303492981008611, 0.037645634864504361]
plt.plot( NLIMIT_values, falsefu_values, 'g-', label=r'$\mathrm{falseF\ddot{u}r-Kas}$')
plt.errorbar(NLIMIT_values, falsefu_values, yerr=falsefu_CI_points, ecolor='g', fmt='or')
plt.yscale('log')
plt.legend()
plt.savefig('KLDofY1x2'+'.pdf', format='pdf')
plt.savefig('KLDofY1x2'+'.eps', format='eps')


plt.figure(2)
plt.ylabel(r'$\mathrm{BHT \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
rv_values = [0.06128139140706923, 0.018664833689803331, 0.0085499382983196363, 0.0055702546239850938, 0.005129686128133552, 0.0032288218252532206, 0.0014443173269659787, 0.00096065259849119756, 0.00080339914528149625]
rv_CI_points = [0.0, 0.0031799459674430172, 0.0017925917153112651, 0.00019291571112814158, 0.0023437668568399329, 0.0023551588402513034, 0.00061959400557043702, 0.0008350606330900411, 0.00042696405631176596]
plt.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
plt.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.06128139140706923, 0.020521669769505178, 0.010367246088131334, 0.01044126253541822, 0.0048172377377449279, 0.0035498173691543085, 0.0023444766336049019, 0.002190553208490628, 0.0017956809364297085]
fu_CI_points = [0.0, 0.010614836892574349, 0.0023036706628363417, 0.01448319088363517, 0.0066529278124963839, 0.0045285171601958654, 0.0026167404948313519, 0.0015912392506145091, 0.0010832228380426171]
plt.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
plt.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
plt.yscale('log')
plt.legend()
plt.savefig('BHTofY1x2'+'.pdf', format='pdf')
plt.savefig('BHTofY1x2'+'.eps', format='eps')


plt.figure(3)
plt.ylabel(r'$\mathrm{HEL \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
rv_values = [0.24310371665702471, 0.11210834349743912, 0.074726462755029116, 0.056093532809801297, 0.054434065106473292, 0.048228365843155832, 0.033511832876750587, 0.028548563670236424, 0.026315161210080842]
rv_CI_points = [0.0, 0.014921524166522072, 0.0015323419631564591, 0.0050065865577465654, 0.0094050362801998116, 0.011718565001259715, 0.0089953787144103538, 0.012664772890942248, 0.0053370566928590728]
plt.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
plt.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.24310371665702471, 0.12889542778296251, 0.093999464834185309, 0.084091819708592891, 0.058288409106543891, 0.05041699694621421, 0.044917079780840988, 0.045037128418751231, 0.041130414558548559]
fu_CI_points = [0.0, 0.029662190249569474, 0.0018480158838176082, 0.061966870763995339, 0.042072110534030156, 0.031181397810277095, 0.027487396089057228, 0.018244508883471282, 0.013740722863848033]
plt.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
plt.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
plt.yscale('log')
plt.legend()
plt.savefig('HELofY1x2'+'.pdf', format='pdf')
plt.savefig('HELofY1x2'+'.eps', format='eps')


fig = plt.figure(4)
NLIMIT_values = [1, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000]
ax1 = fig.add_subplot(111)
plt.ylabel(r'$\mathrm{KLD \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
rv_values = [0.31546680485996181, 0.10371719464542195, 0.046907205022106907, 0.030820846193848495, 0.028458554131843294, 0.017968363932807881, 0.0081144066089851238, 0.0054830972438483739, 0.0046211308460555557]
rv_CI_points = [0.0, 0.014740135489781116, 0.0072006569435874553, 0.002388276210520103, 0.013331940353785994, 0.013181391321033924, 0.0036528897185217884, 0.004810733223883275, 0.0024109583340224923]
ax1.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
ax1.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.31546680485996181, 0.13354164933916007, 0.066613951956671691, 0.063836438397860934, 0.028588376517838208, 0.021187373077161113, 0.013721865239716117, 0.013030196470483486, 0.010710946786977467]
fu_CI_points = [0.0, 0.090676046091328455, 0.01634150603936832, 0.088460367624821651, 0.039644840268613361, 0.027321697899480638, 0.015533538632383638, 0.0094838256313584408, 0.0065321445456135805]
ax1.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax1.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
falsefu_values = [0.31546680485996181, 0.194740925157775, 0.048231404828969093, 0.032345878588444552, 0.017638798111958037, 0.0082046296267670512, 0.028435191826047167, 0.032517979010593279, 0.024882864936355033]
falsefu_CI_points = [0.0, 0.28183069446164755, 0.0005718643799125457, 0.015119186360904792, 0.018869655385717478, 0.0020843928377536434, 0.043096693743915976, 0.048303492981008611, 0.037645634864504361]
ax1.plot( NLIMIT_values, falsefu_values, 'g-', label=r'$\mathrm{F\ddot{u}r-Kas*}$')
ax1.errorbar(NLIMIT_values, falsefu_values, yerr=falsefu_CI_points, ecolor='g', fmt='og')
ax1.set_yscale('log')
ax1.set_xlabel(r'$\mathrm{number \/ of \/ observations}$')
ax1.set_ylabel(r'$\mathrm{KLD}$')
ax2 = ax1.twinx()
rv_time_values = [6.103515625e-05, 14.948036551475525, 30.004366993904114, 45.043277025222778, 60.33913242816925, 76.153269410133362, 91.947075963020325, 107.33684504032135, 123.24312257766724]
rv_time_deviations = [1.1463942794963176e-05, 0.39251579181807866, 0.86836686132280771, 1.2806029949717397, 2.015328605987476, 2.7082410029451305, 2.8065591481026155, 3.0471522411909318, 2.9717655219586478]
rv_time_CI_points = [1.5888214111328122e-05, 0.54399913311004622, 1.2034950685501098, 1.7748252010345458, 2.7931029462814325, 3.753430533409118, 3.8896925306320185, 4.2231375455856321, 4.1186568832397459]
ax2.plot(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', label=r'$\mathrm{random \/ vertex}$')
ax2.errorbar(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', yerr=rv_time_CI_points)
fu_time_values = [7.4028968811035156e-05, 4.0755009651184082, 8.1601125001907349, 12.124142050743103, 16.255737543106079, 20.359197974205017, 24.447456955909729, 28.749534010887146, 32.972103476524353]
fu_time_deviations = [9.9466562485709922e-06, 0.23951413376643713, 0.53004230720827827, 0.59784175077163093, 0.93355269451630285, 1.2337628419980664, 1.2674718914370795, 0.87443229858570748, 1.2304908978544689]
fu_time_CI_points = [1.3785362243652344e-05, 0.33194965362548828, 0.73460115909576418, 0.82856639385223385, 1.2938380241394043, 1.7099080610275266, 1.7566264200210568, 1.2119013357162476, 1.7053733777999878]
ax2.plot(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax2.errorbar(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', yerr=fu_time_CI_points)
falsefu_time_values = [4.2438507080078125e-05, 3.3933573961257935, 6.7843884229660034, 10.179189920425415, 13.562968969345093, 16.907550930976868, 20.3106449842453, 23.684953451156616, 27.131794452667236]
falsefu_time_deviations = [7.7550201260045018e-06, 0.010298835314728022, 0.013230570097145811, 0.050447754618811631, 0.033364119630799889, 0.082752639652835733, 0.10118969424022931, 0.093238269800164045, 0.026467546515265276]
falsefu_time_CI_points = [1.0747909545898437e-05, 0.014273457527160645, 0.018336634635925293, 0.069917020797729476, 0.046240310668945302, 0.11468930721282958, 0.14024176120758056, 0.12922164916992188, 0.036682147979736318]
ax2.plot(NLIMIT_values, falsefu_time_values, color='k',  linestyle='dotted', label=r'$\mathrm{F\ddot{u}r-Kas*}$')
ax2.errorbar(NLIMIT_values, falsefu_time_values, color='k',  linestyle='dotted', yerr=falsefu_time_CI_points)
#ax2.axhline(y=extime,  color='k')       #      set this also, for extime plotting
ax2.set_ylabel(r'$\mathrm{time}$')
leg1 = ax1.legend(loc=2, fancybox=True)
leg1.get_frame().set_alpha(0.5)
leg2 = ax2.legend(loc=1, fancybox=True)
leg2.get_frame().set_alpha(0.5)
plt.savefig('KLDofY1x2'+'time.pdf', format='pdf')
plt.savefig('KLDofY1x2'+'time.eps', format='eps')


fig = plt.figure(5)
NLIMIT_values = [1, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000]
ax1 = fig.add_subplot(111)
plt.ylabel(r'$\mathrm{BHT \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
rv_values = [0.06128139140706923, 0.018664833689803331, 0.0085499382983196363, 0.0055702546239850938, 0.005129686128133552, 0.0032288218252532206, 0.0014443173269659787, 0.00096065259849119756, 0.00080339914528149625]
rv_CI_points = [0.0, 0.0031799459674430172, 0.0017925917153112651, 0.00019291571112814158, 0.0023437668568399329, 0.0023551588402513034, 0.00061959400557043702, 0.0008350606330900411, 0.00042696405631176596]
ax1.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
ax1.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.06128139140706923, 0.020521669769505178, 0.010367246088131334, 0.01044126253541822, 0.0048172377377449279, 0.0035498173691543085, 0.0023444766336049019, 0.002190553208490628, 0.0017956809364297085]
fu_CI_points = [0.0, 0.010614836892574349, 0.0023036706628363417, 0.01448319088363517, 0.0066529278124963839, 0.0045285171601958654, 0.0026167404948313519, 0.0015912392506145091, 0.0010832228380426171]
ax1.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax1.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
ax1.set_yscale('log')
ax1.set_xlabel(r'$\mathrm{number \/ of \/ observations}$')
ax1.set_ylabel(r'$\mathrm{BHT}$')
ax2 = ax1.twinx()
rv_time_values = [6.103515625e-05, 14.948036551475525, 30.004366993904114, 45.043277025222778, 60.33913242816925, 76.153269410133362, 91.947075963020325, 107.33684504032135, 123.24312257766724]
rv_time_deviations = [1.1463942794963176e-05, 0.39251579181807866, 0.86836686132280771, 1.2806029949717397, 2.015328605987476, 2.7082410029451305, 2.8065591481026155, 3.0471522411909318, 2.9717655219586478]
rv_time_CI_points = [1.5888214111328122e-05, 0.54399913311004622, 1.2034950685501098, 1.7748252010345458, 2.7931029462814325, 3.753430533409118, 3.8896925306320185, 4.2231375455856321, 4.1186568832397459]
ax2.plot(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', label=r'$\mathrm{random \/ vertex}$')
ax2.errorbar(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', yerr=rv_time_CI_points)
fu_time_values = [7.4028968811035156e-05, 4.0755009651184082, 8.1601125001907349, 12.124142050743103, 16.255737543106079, 20.359197974205017, 24.447456955909729, 28.749534010887146, 32.972103476524353]
fu_time_deviations = [9.9466562485709922e-06, 0.23951413376643713, 0.53004230720827827, 0.59784175077163093, 0.93355269451630285, 1.2337628419980664, 1.2674718914370795, 0.87443229858570748, 1.2304908978544689]
fu_time_CI_points = [1.3785362243652344e-05, 0.33194965362548828, 0.73460115909576418, 0.82856639385223385, 1.2938380241394043, 1.7099080610275266, 1.7566264200210568, 1.2119013357162476, 1.7053733777999878]
ax2.plot(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax2.errorbar(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', yerr=fu_time_CI_points)
#ax2.axhline(y=extime,  color='k')       #      set this also, for extime plotting
ax2.set_ylabel(r'$\mathrm{time}$')
leg1 = ax1.legend(loc=2, fancybox=True)
leg1.get_frame().set_alpha(0.5)
leg2 = ax2.legend(loc=1, fancybox=True)
leg2.get_frame().set_alpha(0.5)
plt.savefig('BHTofY1x2'+'time.pdf', format='pdf')
plt.savefig('BHTofY1x2'+'time.eps', format='eps')


fig = plt.figure(6)
NLIMIT_values = [1, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000]
ax1 = fig.add_subplot(111)
plt.ylabel(r'$\mathrm{HEL \/ Y1x2}$')
plt.xlabel(r'$\mathrm{number \/ of \/ observations}$')
rv_values = [0.24310371665702471, 0.11210834349743912, 0.074726462755029116, 0.056093532809801297, 0.054434065106473292, 0.048228365843155832, 0.033511832876750587, 0.028548563670236424, 0.026315161210080842]
rv_CI_points = [0.0, 0.014921524166522072, 0.0015323419631564591, 0.0050065865577465654, 0.0094050362801998116, 0.011718565001259715, 0.0089953787144103538, 0.012664772890942248, 0.0053370566928590728]
ax1.plot(NLIMIT_values, rv_values, 'b-', label=r'$\mathrm{random \/ vertex}$')
ax1.errorbar(NLIMIT_values, rv_values, yerr=rv_CI_points, fmt='o')
fu_values = [0.24310371665702471, 0.12889542778296251, 0.093999464834185309, 0.084091819708592891, 0.058288409106543891, 0.05041699694621421, 0.044917079780840988, 0.045037128418751231, 0.041130414558548559]
fu_CI_points = [0.0, 0.029662190249569474, 0.0018480158838176082, 0.061966870763995339, 0.042072110534030156, 0.031181397810277095, 0.027487396089057228, 0.018244508883471282, 0.013740722863848033]
ax1.plot( NLIMIT_values, fu_values, 'r-', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax1.errorbar(NLIMIT_values, fu_values, yerr=fu_CI_points, ecolor='r', fmt='or')
ax1.set_yscale('log')
ax1.set_xlabel(r'$\mathrm{number \/ of \/ observations}$')
ax1.set_ylabel(r'$\mathrm{HEL}$')
ax2 = ax1.twinx()
rv_time_values = [6.103515625e-05, 14.948036551475525, 30.004366993904114, 45.043277025222778, 60.33913242816925, 76.153269410133362, 91.947075963020325, 107.33684504032135, 123.24312257766724]
rv_time_deviations = [1.1463942794963176e-05, 0.39251579181807866, 0.86836686132280771, 1.2806029949717397, 2.015328605987476, 2.7082410029451305, 2.8065591481026155, 3.0471522411909318, 2.9717655219586478]
rv_time_CI_points = [1.5888214111328122e-05, 0.54399913311004622, 1.2034950685501098, 1.7748252010345458, 2.7931029462814325, 3.753430533409118, 3.8896925306320185, 4.2231375455856321, 4.1186568832397459]
ax2.plot(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', label=r'$\mathrm{random \/ vertex}$')
ax2.errorbar(NLIMIT_values, rv_time_values, color='k',  linestyle='dashed', yerr=rv_time_CI_points)
fu_time_values = [7.4028968811035156e-05, 4.0755009651184082, 8.1601125001907349, 12.124142050743103, 16.255737543106079, 20.359197974205017, 24.447456955909729, 28.749534010887146, 32.972103476524353]
fu_time_deviations = [9.9466562485709922e-06, 0.23951413376643713, 0.53004230720827827, 0.59784175077163093, 0.93355269451630285, 1.2337628419980664, 1.2674718914370795, 0.87443229858570748, 1.2304908978544689]
fu_time_CI_points = [1.3785362243652344e-05, 0.33194965362548828, 0.73460115909576418, 0.82856639385223385, 1.2938380241394043, 1.7099080610275266, 1.7566264200210568, 1.2119013357162476, 1.7053733777999878]
ax2.plot(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', label=r'$\mathrm{F\ddot{u}r-Kas}$')
ax2.errorbar(NLIMIT_values, fu_time_values, color='k',  linestyle='solid', yerr=fu_time_CI_points)
#ax2.axhline(y=extime,  color='k')       #      set this also, for extime plotting
ax2.set_ylabel(r'$\mathrm{time}$')
leg1 = ax1.legend(loc=2, fancybox=True)
leg1.get_frame().set_alpha(0.5)
leg2 = ax2.legend(loc=1, fancybox=True)
leg2.get_frame().set_alpha(0.5)
plt.savefig('HELofY1x2'+'time.pdf', format='pdf')
plt.savefig('HELofY1x2'+'time.eps', format='eps')


